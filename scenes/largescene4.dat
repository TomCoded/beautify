windowDims (640,640)
//windowDims (150,150)
dtdf 0.078

sceneAmbient (0.1,0.1,0.1)

camera ((0.0,0.0,12.0),(0,0,0),(0,1,0),.7,1.0,1.0,400.0)
DiffusePointLight ((3,0,3),(1.0,1.0,1.0),(0,0,0),400.0)
DiffusePointLight ((-3,0,3),(1.0,1.0,1.0),(0,0,0),400.0)

include mat/Chrome.mat
//scale (0.4,0.4,0.4)
//ellipsoid

//sphere 2
include mat/Bronze.mat
identity
//translate (1.0,1.0,1.0)
funTransform cos(t) 0 0 0-2*cos(t-(4.7))  0 cos(t) 0 2*sin(t-(4.7))  0 0 1 0  0 0 0 1
funTransformInverse (1/(cos(t))) 0 0 0-(0-2*cos(t-(4.7)))  0 1/cos(t) 0 0-(2*sin(t-(4.7)))  0 0 1 0  0 0 0 1
//transpose of the inverse
funTransformNormals (1/(cos(t))) 0 0 0  0 1/cos(t) 0 0  0 0 1 0  0-(0-2*cos(t-(4.7))) 0-(2*sin(t-(4.7))) 0 1
ellipsoid

//sphere
include mat/Chrome.mat
identity
//translate (-1.0,1.0,1.0)
funTransform sin(t) 0 0 0-1*cos(t-(3.14))  0 sin(t) 0 1*sin(t-(3.14))  0 0 1 sin(t)  0 0 0 1
funTransformInverse 1/sin(t) 0 0 0-(0-1*cos(t-(3.14)))  0 1/sin(t) 0 0-(1*sin(t-(3.14)))  0 0 1 0-sin(t)  0 0 0 1
//transpose of the inverse
funTransformNormals 1/sin(t) 0 0 0  0 1/sin(t) 0 0  0 0 1 0  0-(0-1*cos(t-(3.14))) 0-(1*sin(t-(3.14))) 0-sin(t) 1
ellipsoid

//sphere
include mat/Brass.mat
identity
funTransform cos(t) 0 0 0-2*cos(t-1.57)  0 cos(t) 0 2*sin(t-1.57)  0 0 1 0  0 0 0 1
funTransformInverse 1/cos(t) 0 0 0-(0-2*cos(t-1.57))  0 1/cos(t) 0 0-(2*sin(t-1.57))  0 0 1 0  0 0 0 1
//transpose of the inverse
funTransformNormals 1/cos(t) 0 0 0  0 1/cos(t) 0 0  0 0 1 0  0-(0-2*cos(t-1.57)) 0-(2*sin(t-1.57)) 0 1
ellipsoid

//sphere
include mat/Brass.mat
identity
funTransform sin(t) 0 0 0-1*cos(t))  0 sin(t) 0 1*sin(t)  0 0 1 sin(t)  0 0 0 1
funTransformInverse 1/sin(t) 0 0 0-(0-1*cos(t))  0 1/sin(t) 0 0-(1*sin(t))  0 0 1 0-sin(t)  0 0 0 1
//transpose of the inverse
funTransformNormals 1/sin(t) 0 0 0  0 1/sin(t) 0 0  0 0 1 0  0-(0-1*cos(t)) 0-(1*sin(t)) 0-sin(t) 1
ellipsoid

//sphere
//include mat/Brass.mat
identity
funTransform 1.5 0 0 2*cos(t)  0 1.5 0 1.2*sin(t)  0 0 1.5 0  0 0 0 1
funTransformInverse 0.6666 0 0 0-(2*cos(t))  0 0.6666 0 0-(1.2*sin(t))  0 0 0.6666 0  0 0 0 1
//transpose of the inverse
funTransformNormals 0.6666 0 0 0  0 0.6666 0 0  0 0 0.6666 0  0-(2*cos(t)) 0-(1.2*sin(t)) 0 1
//ellipsoid

//plane 1
identity
include mat/Brass.mat
funTransform 7 0 0 3*cos(t)  0 7 0 0  0 0 1 0-4  0 0 0 1
funTransformInverse 1/7 0 0 3*cos(0-t)  0 1/7 0 0  0 0 1 4  0 0 0 1
//transpose of the inverse
funTransformNormals 1/7 0 0 0  0 1/7 0 0  0 0 1 0  3*cos(0-t) 0 4 1
//plane background would use:
//translate (0.0,0.0,-3.0)
//scale (7.0,7.0,1.0)
plane

//plane 2
identity
include mat/Chrome.mat
scale (10,10,1)
yRotate 0.78
translate (-6.0,0,0)
plane

//plane 3
identity
include mat/Chrome.mat
scale (10,10,1)
yRotate -0.78
translate (6.0,0,0)
plane

include mat/blue.mat
identity
scale (10,10,1)
xRotate -1.2
translate (0,-3.5,0)
plane

include mat/blue.mat
identity
scale (10,10,1)
xRotate 1.2
translate (0,3.5,0)
plane
